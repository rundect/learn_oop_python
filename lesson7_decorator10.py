def decorator_maker():
    print(
        "Я создаю декораторы! Я буду вызван только раз: когда ты попросишь меня создать тебе декоратор.")

    def my_decorator(func):
        print(
            "Я - декоратор! Я буду вызван только раз: в момент декорирования функции.")

        def wrapped():
            print("Я - обёртка вокруг декорируемой функции. "
                  "Я буду вызвана каждый раз когда ты вызываешь декорируемую функцию. "
                  "Я возвращаю результат работы декорируемой функции.")
            return func()

        print(
            "Я возвращаю обёрнутую функцию.")
        return wrapped

    print(
        "Я возвращаю декоратор.")
    return my_decorator


# Давайте теперь создадим декоратор. Это всего лишь ещё один вызов функции
new_decorator = decorator_maker()


# Я создаю декораторы! Я буду вызван только раз: когда ты попросишь меня создать тебе декоратор.
# Я возвращаю декоратор.


# Теперь декорируем функцию
def decorated_function():
    print(
        "Я - декорируемая функция.")


decorated_function = new_decorator(decorated_function)
# Я - декоратор! Я буду вызван только раз: в момент декорирования функции.
# Я возвращаю обёрнутую функцию.

# Теперь наконец вызовем функцию:
decorated_function()
# Я - обёртка вокруг декорируемой функции. Я буду вызвана каждый раз когда ты вызываешь декорируемую функцию.
# Я возвращаю результат работы декорируемой функции.
# Я - декорируемая функция.

print()
print('-------------------------------------------------------------------------------------')
print()


def decorated_function():
    print(
        "Я - декорируемая функция.")


decorated_function = decorator_maker()(decorated_function)
# Я создаю декораторы! Я буду вызван только раз: когда ты попросишь меня создать тебе декоратор.
# Я возвращаю декоратор.
# Я - декоратор! Я буду вызван только раз: в момент декорирования функции.
# Я возвращаю обёрнутую функцию.

decorated_function()
# Я - обёртка вокруг декорируемой функции. Я буду вызвана каждый раз когда ты вызываешь декорируемую функцию.
# Я возвращаю результат работы декорируемой функции.
# Я - декорируемая функция.

print()
print('-------------------------------------------------------------------------------------')
print()


@decorator_maker()
def decorated_function():
    print(
        "I am the decorated function.")


# Я создаю декораторы! Я буду вызван только раз: когда ты попросишь меня создать тебе декоратор.
# Я возвращаю декоратор.
# Я - декоратор! Я буду вызван только раз: в момент декорирования функции.
# Я возвращаю обёрнутую функцию.

decorated_function()
# Я - обёртка вокруг декорируемой функции. Я буду вызвана каждый раз когда ты вызываешь декорируемую функцию.
# Я возвращаю результат работы декорируемой функции.
# Я - декорируемая функция.
